load "genfree-codebase-part2.magma";

print "Testing representations that are examined in Garibaldi-Guralnick II";

/*******************************************/
section("Section 4");

testOne("C", 4, 3, [0,0,1,0], 40, 2);

/*******************************************/
section("Section 5");

sec5 := [
[* "B", 2, 5, [1, 1], 12, 1 *],
[* "B", 2, 2, [1, 1], 16, 0 *],
[* "B", 3, 2, [1, 0, 1], 48, 0 *],
[* "B", 3, 7, [1, 0, 1], 40, 0 *],
[* "C", 5, 3, [0,0,0,0,1], 122, 0 *]
];

testSeq(sec5);

// Now we make the 1001 rep of D4 in char 2 as in Example 5.4

// we have to be careful to make the Lie algebra of the correct quotient of Spin_8
G< a, b > := FundamentalGroup("D4");
_, inj1 := sub< G | a >;
testOne("D", 4, 2, [1,0,0,1], 48, 0 : iso := inj1);

/*******************************************/
section("Section 7");

print "Representations from Remark 7.3";

rm73 := [
    [* "A", 7, 2, [0,0,0,1,0,0,0], Binomial(8,4), 3, 2 *], // SL8/mu_4 wedge^4 in char 2
	[* "A", 8, 3, [0,0,1,0,0,0,0,0], Binomial(9,3), 2, 3 *] // SL9/mu_3 wedge^3 in char 3
];

testSeq(rm73);

/*******************************************/
section("Section 8");

print "Representations from Prop. 8.1";

sec81:= [ 
];


// wedge^3 of SL_ell where 3 divides ell+1, in characteristic 3
for ell in [11, 14] do
	zvec := [0 : i in [1..ell]];
	zvec[3] := 1;
	Append(~sec81, 
		[* "A", ell, 3, zvec, Binomial(ell+1, 3), 0, Integers()!((ell+1)/GCD(ell+1, 3)) *]
		);
end for;

// wedge^4 of SL_ell where 2 divides ell+1, in characteristic 2
for ell in [9] do
	zvec := [0 : i in [1..ell]];
	zvec[4] := 1;
	Append(~sec81, 
		[* "A", ell, 2, zvec, Binomial(ell+1, 4), 0, Integers()!((ell+1)/GCD(ell+1, 4)) *]
		);
end for;

testSeq(sec81);

print "Representations from Prop. 8.3";

testSeq([ [* "C", 6, 5, [0,0,1,0,0,0], Binomial(12, 3) - 24, 0 *] ]);

/*******************************************/
section("Section 9");

sec9 := [
	[* "A", 8, 2, [0,0,1,0,0,0,0,0], Binomial(9,3), 0 *],
	[* "A", 3, 2, [0,0,4], 35, 0, 1 *]
	];

// 1100....0 of SL_ell, in characteristic 3
dims9 := [0,0,16,30,50,77,112,156,210];
for ell in [3..9] do
	zvec := [0 : i in [1..ell]];
	zvec[1] := 1;
	zvec[2] := 1;
	aval := [* "A", ell, 3, zvec, dims9[ell], 0 *];
	z := Integers()!((ell+1)/GCD(ell+1, 3));
	if z ne ell+1 then
		Append(~aval, z);
	end if;

	Append(~sec9, aval);
end for;

sec9 cat:= 
	[
		[* "D", 5, 2, [0, 0, 1, 0 ,0], 100, 0, 2 *], // "wedge^3" rep of SO_10 in char 2
		[* "D", 5, 5, [1, 0, 0, 0, 1], 128, 0 *],
 		[* "C", 3, 3, [1, 1, 0], 50, 0 *],
 		[* "C", 5, 3, [0,0,0,1,0], 121, 0 *]
	];

testSeq(sec9);

/*******************************************/
section("Section 10");

print "In the following, we verify that a non-faithful representation of SL_4 is virtually free for sl_4\n";

testOne("A", 3, 2, [0,1,0], 6, 0 : copies :=  4); // sl_4 acts virtually freely (we check this even though SL_4 does not act faithfully)



